{"ast":null,"code":"var _jsxFileName = \"/Users/karanshrestha7/Documents/GitHub/netflix-clone/src/Row.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  const [movies, setMovies] = useState([]); // A snipprt of code which runs based on a specfic condition/variable\n\n  useEffect(() => {\n    // if [], run once when the row loads, and don't run again\n    async function fetchData() {\n      const request = await axios.get(fetchUrl); //console.log(request.data.results);\n\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row__posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(\"img\", {\n    key: movie.id,\n    className: \"row__poster\",\n    src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n    alt: movie.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }))));\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/karanshrestha7/Documents/GitHub/netflix-clone/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","table","map","movie","id","poster_path","backdrop_path","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,QAAQ,GAAG,qCAAjB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAb,EAA8C;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAD4C,CAG5C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,mBAAeS,SAAf,GAA2B;AACzB,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUN,QAAV,CAAtB,CADyB,CAEzB;;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACD;;AACDD,IAAAA,SAAS;AACV,GATQ,EASN,CAACJ,QAAD,CATM,CAAT;AAWAS,EAAAA,OAAO,CAACC,KAAR,CAAcR,MAAd;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADJ,eAGI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGG,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACf;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,GAAG,EAAG,GAAEhB,QAAS,GACfI,UAAU,GAAGW,KAAK,CAACE,WAAT,GAAuBF,KAAK,CAACG,aACxC,EALH;AAME,IAAA,GAAG,EAAEH,KAAK,CAACI,IANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHH,CAHJ,CADJ;AAoBD;;AAED,eAAelB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from './axios';\nimport \"./Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n\n  // A snipprt of code which runs based on a specfic condition/variable\n  useEffect(() => {\n    // if [], run once when the row loads, and don't run again\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      //console.log(request.data.results);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  console.table(movies);\n\n  return (\n      <div className=\"row\">\n          <h2>{title}</h2>\n          {/* title */}\n          <div className=\"row__posters\">\n            {/*several row__poster(s) */}\n\n            {movies.map(movie => (\n              <img\n                key={movie.id}\n                className=\"row__poster\"\n                src={`${base_url}${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.name}\n              />\n            ))}\n          </div>\n      </div>\n    )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}